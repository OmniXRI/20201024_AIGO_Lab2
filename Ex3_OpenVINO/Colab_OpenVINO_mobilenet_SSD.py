# -*- coding: utf-8 -*-
"""Colab_OpenVINO_mobilenet_SSD.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dmR1lRN-4nl9vLu-aA0GHVvyhlUvYu46

# **Colab安裝OpenVINO並下載執行mobilenet-SSD物件範例**

範例提供：OmniXRI Jack 2020.9.10

主要工作項目：

1.   檢查系統
2.   安裝OpenVINO工具包
3.   模型下載
4.   模型優化
5.   執行推論

參考範例來源：https://colab.research.google.com/drive/1-ETOSlDftRCkAW4FoBHGLgslfaRMRqBU

# **0. 檢查系統**
"""

# 檢查CPU狀態
# 預設會分配到 Intel Xeon CPU x64 2.2GHz 二顆
# OpenVINO只支援虛擬機的Intel CPU Xeon，不支援虛擬機的Nvidia GPU或Google TPU
!lscpu

# 檢查作業系統狀態
# 預設會分配到 Ubuntu 18.04.3 LTS版本
!cat /etc/os-release

"""# **1. 安裝Intel OpenVINO工具包**"""

# 取得OpenVINO2020公開金錀
!wget https://apt.repos.intel.com/openvino/2020/GPG-PUB-KEY-INTEL-OPENVINO-2020

# 加入OpenVINO公開金錀到系統金錀群中
!apt-key add GPG-PUB-KEY-INTEL-OPENVINO-2020

# 建立更新安裝清單檔案
!touch /etc/apt/sources.list.d/intel-openvino-2020.list

# 將下載指令加入安裝清單中
!echo "deb https://apt.repos.intel.com/openvino/2020 all main" >> /etc/apt/sources.list.d/intel-openvino-2020.list

# 更新系統
!apt update

"""可利用 !apt-cache search openvino 指令搜尋可安裝的版本系統包，包含Runtime及Developer Packages"""

# 安裝OpenVINO到虛擬機系統中
!apt install intel-openvino-dev-ubuntu18-2020.4.287

# 列出安裝路徑下內容
!ls /opt/intel

"""# **2. 模型下載**"""

# 執行環境設定批次檔並以模型下載器取得mobilenet-ssd
# 可以用 --name 取得OpenVINO提供之任意指定模型名稱
!source /opt/intel/openvino/bin/setupvars.sh && \
python /opt/intel/openvino/deployment_tools/tools/model_downloader/downloader.py \
--name mobilenet-ssd

"""# **3. 模型優化**"""

# 下載及安裝test-generator 方便檢查程式運行錯誤
!pip install test-generator==0.1.1

# 執行環境設定批次檔並將下載到的mobilenet-v1-1.0-224模型檔進行優化轉換產生IR(xml & bin)檔
# 可以用 --name 指定下載到模型名稱
!source /opt/intel/openvino/bin/setupvars.sh && \
python /opt/intel/openvino/deployment_tools/tools/model_downloader/converter.py \
--name mobilenet-ssd

"""# **4. 執行推論**"""

# 以OpenCV檢視輸入影像
import cv2
import matplotlib.pyplot as plt

img = cv2.imread('/opt/intel/openvino/deployment_tools/demo/car_1.bmp') # 讀入指定彩色影像
rgb = cv2.cvtColor(img, cv2.COLOR_BGR2RGB) # 將影像從BGR格式轉到RGB格式，才能讓plt.imshow()正確顯示
plt.figure() # 準備一顯示影像空間
plt.imshow(rgb) # 顯示影像

"""執行環境設定批次檔並執行mobilenet-SSD物件偵測

環境設定批次檔 /opt/intel/openvino/bin/setupvars.sh

物件偵測範例 /opt/intel/openvino/inference_engine/samples/python/object_detection_sample_ssd/object_detection_sample_ssd.py

參數：

-m 模型名稱 (*.xml)

-i 輸入影像名稱 (*.png, *.jpg ...)

--labels ImageNet 1000分類名稱標籤檔
"""

# 檢視範例程式碼（可略過不執行）
!cat /opt/intel/openvino/inference_engine/samples/python/object_detection_sample_ssd/object_detection_sample_ssd.py

# 執行環境設定批次檔並執行物件偵測
# 輸出結果影像預設為'out.bmp'
!source /opt/intel/openvino/bin/setupvars.sh && \
python \
/opt/intel/openvino/inference_engine/samples/python/object_detection_sample_ssd/object_detection_sample_ssd.py \
-m /content/public/mobilenet-ssd/FP16/mobilenet-ssd.xml \
-i /opt/intel/openvino/deployment_tools/demo/car_1.bmp \
--labels /opt/intel/openvino/deployment_tools/inference_engine/samples/python/voc_labels.txt

# 以OpenCV檢視輸入影像
result = cv2.imread('out.bmp') # 讀入指定彩色影像
rgb2 = cv2.cvtColor(result, cv2.COLOR_BGR2RGB) # 將影像從BGR格式轉到RGB格式，才能讓plt.imshow()正確顯示
plt.figure() # 準備一顯示影像空間
plt.imshow(rgb2) # 顯示影像